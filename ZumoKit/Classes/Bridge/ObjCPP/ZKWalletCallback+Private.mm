// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from user.djinni

#import "ZKWalletCallback+Private.h"
#import "ZKWalletCallback.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "ZKWallet+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface ZKWalletCallbackCppProxy : NSObject<ZKWalletCallback>

- (id)initWithCpp:(const std::shared_ptr<::zumo::WalletCallback>&)cppRef;

@end

@implementation ZKWalletCallbackCppProxy {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::zumo::WalletCallback>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::zumo::WalletCallback>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)onError:(nonnull NSString *)errorName
   errorMessage:(nonnull NSString *)errorMessage {
    try {
        _cppRefHandle.get()->on_error(::djinni::String::toCpp(errorName),
                                      ::djinni::String::toCpp(errorMessage));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)onSuccess:(nullable ZKWallet *)wallet {
    try {
        _cppRefHandle.get()->on_success(::djinni_generated::Wallet::toCpp(wallet));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

class WalletCallback::ObjcProxy final
: public ::zumo::WalletCallback
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::WalletCallback;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void on_error(const std::string & c_error_name, const std::string & c_error_message) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onError:(::djinni::String::fromCpp(c_error_name))
                                                 errorMessage:(::djinni::String::fromCpp(c_error_message))];
        }
    }
    void on_success(const std::shared_ptr<::zumo::Wallet> & c_wallet) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onSuccess:(::djinni_generated::Wallet::fromCpp(c_wallet))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto WalletCallback::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    if ([(id)objc isKindOfClass:[ZKWalletCallbackCppProxy class]]) {
        return ((ZKWalletCallbackCppProxy*)objc)->_cppRefHandle.get();
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto WalletCallback::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    if (auto cppPtr = dynamic_cast<ObjcProxy*>(cpp.get())) {
        return cppPtr->djinni_private_get_proxied_objc_object();
    }
    return ::djinni::get_cpp_proxy<ZKWalletCallbackCppProxy>(cpp);
}

}  // namespace djinni_generated

@end
