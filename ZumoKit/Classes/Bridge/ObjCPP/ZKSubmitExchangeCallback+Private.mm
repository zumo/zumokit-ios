// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet.djinni

#import "ZKSubmitExchangeCallback+Private.h"
#import "ZKSubmitExchangeCallback.h"
#import "DJIObjcWrapperCache+Private.h"
#import "NSError+ZumoKit.h"
#import "ZKExchange+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class SubmitExchangeCallback::ObjcProxy final
: public ::zumo::SubmitExchangeCallback
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::SubmitExchangeCallback;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void on_error(const ::zumo::ZumoKitException & c_e) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onError:(::zumo::djinni::objc::ZumoKitExceptionConverter::fromCpp(c_e))];
        }
    }
    void on_success(const ::zumo::Exchange & c_exchage) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onSuccess:(::djinni_generated::Exchange::fromCpp(c_exchage))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto SubmitExchangeCallback::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto SubmitExchangeCallback::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
