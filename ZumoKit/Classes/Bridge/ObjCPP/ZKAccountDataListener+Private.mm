// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from user.djinni

#import "ZKAccountDataListener+Private.h"
#import "ZKAccountDataListener.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "ZKAccountDataSnapshot+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface ZKAccountDataListenerCppProxy : NSObject<ZKAccountDataListener>

- (id)initWithCpp:(const std::shared_ptr<::zumo::AccountDataListener>&)cppRef;

@end

@implementation ZKAccountDataListenerCppProxy {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::zumo::AccountDataListener>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::zumo::AccountDataListener>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)onDataChange:(nonnull NSArray<ZKAccountDataSnapshot *> *)snapshots {
    try {
        _cppRefHandle.get()->on_data_change(::djinni::List<::djinni_generated::AccountDataSnapshot>::toCpp(snapshots));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

class AccountDataListener::ObjcProxy final
: public ::zumo::AccountDataListener
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::AccountDataListener;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void on_data_change(const std::vector<::zumo::AccountDataSnapshot> & c_snapshots) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onDataChange:(::djinni::List<::djinni_generated::AccountDataSnapshot>::fromCpp(c_snapshots))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto AccountDataListener::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    if ([(id)objc isKindOfClass:[ZKAccountDataListenerCppProxy class]]) {
        return ((ZKAccountDataListenerCppProxy*)objc)->_cppRefHandle.get();
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto AccountDataListener::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    if (auto cppPtr = dynamic_cast<ObjcProxy*>(cpp.get())) {
        return cppPtr->djinni_private_get_proxied_objc_object();
    }
    return ::djinni::get_cpp_proxy<ZKAccountDataListenerCppProxy>(cpp);
}

}  // namespace djinni_generated

@end
