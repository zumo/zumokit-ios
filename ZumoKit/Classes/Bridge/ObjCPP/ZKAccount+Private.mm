// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from state.djinni

#import "ZKAccount+Private.h"
#import "DJIMarshal+Private.h"
#import "ZKNetworkType+Private.h"
#include <cassert>

namespace djinni_generated {

auto Account::toCpp(ObjcType obj) -> CppType
{
    assert(obj);
    return {::djinni::String::toCpp(obj.id),
            ::djinni::String::toCpp(obj.path),
            ::djinni::String::toCpp(obj.symbol),
            ::djinni::String::toCpp(obj.coin),
            ::djinni::String::toCpp(obj.address),
            ::djinni::String::toCpp(obj.balance),
            ::djinni::Optional<std::experimental::optional, ::djinni::I32>::toCpp(obj.chainId),
            ::djinni::Optional<std::experimental::optional, ::djinni::I64>::toCpp(obj.nonce),
            ::djinni::Enum<::zumo::NetworkType, ZKNetworkType>::toCpp(obj.network),
            ::djinni::I8::toCpp(obj.version)};
}

auto Account::fromCpp(const CppType& cpp) -> ObjcType
{
    return [[ZKAccount alloc] initWithId:(::djinni::String::fromCpp(cpp.id))
                                    path:(::djinni::String::fromCpp(cpp.path))
                                  symbol:(::djinni::String::fromCpp(cpp.symbol))
                                    coin:(::djinni::String::fromCpp(cpp.coin))
                                 address:(::djinni::String::fromCpp(cpp.address))
                                 balance:(::djinni::String::fromCpp(cpp.balance))
                                 chainId:(::djinni::Optional<std::experimental::optional, ::djinni::I32>::fromCpp(cpp.chain_id))
                                   nonce:(::djinni::Optional<std::experimental::optional, ::djinni::I64>::fromCpp(cpp.nonce))
                                 network:(::djinni::Enum<::zumo::NetworkType, ZKNetworkType>::fromCpp(cpp.network))
                                 version:(::djinni::I8::fromCpp(cpp.version))];
}

}  // namespace djinni_generated
