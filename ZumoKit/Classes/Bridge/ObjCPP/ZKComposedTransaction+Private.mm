// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from state.djinni

#import "ZKComposedTransaction+Private.h"
#import "DJIMarshal+Private.h"
#import "ZKAccount+Private.h"
#include <cassert>

namespace djinni_generated {

auto ComposedTransaction::toCpp(ObjcType obj) -> CppType
{
    assert(obj);
    return {::djinni::String::toCpp(obj.signedTransaction),
            ::djinni_generated::Account::toCpp(obj.account),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.destination),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.value),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.data),
            ::djinni::String::toCpp(obj.fee)};
}

auto ComposedTransaction::fromCpp(const CppType& cpp) -> ObjcType
{
    return [[ZKComposedTransaction alloc] initWithSignedTransaction:(::djinni::String::fromCpp(cpp.signed_transaction))
                                                            account:(::djinni_generated::Account::fromCpp(cpp.account))
                                                        destination:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.destination))
                                                              value:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.value))
                                                               data:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.data))
                                                                fee:(::djinni::String::fromCpp(cpp.fee))];
}

}  // namespace djinni_generated
