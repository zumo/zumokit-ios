// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.djinni

#import "ZKComposedExchange.h"


@implementation ZKComposedExchange

- (nonnull instancetype)initWithSignedTransaction:(nullable NSString *)signedTransaction
                                      fromAccount:(nonnull ZKAccount *)fromAccount
                                        toAccount:(nonnull ZKAccount *)toAccount
                                     exchangeRate:(nonnull ZKExchangeRate *)exchangeRate
                                  exchangeSetting:(nonnull ZKExchangeSetting *)exchangeSetting
                                  exchangeAddress:(nullable NSString *)exchangeAddress
                                           amount:(nonnull NSDecimalNumber *)amount
                                     returnAmount:(nonnull NSDecimalNumber *)returnAmount
                           outgoingTransactionFee:(nonnull NSDecimalNumber *)outgoingTransactionFee
                                      exchangeFee:(nonnull NSDecimalNumber *)exchangeFee
                             returnTransactionFee:(nonnull NSDecimalNumber *)returnTransactionFee
                                            nonce:(nonnull NSString *)nonce
{
    if (self = [super init]) {
        _signedTransaction = [signedTransaction copy];
        _fromAccount = fromAccount;
        _toAccount = toAccount;
        _exchangeRate = exchangeRate;
        _exchangeSetting = exchangeSetting;
        _exchangeAddress = [exchangeAddress copy];
        _amount = amount;
        _returnAmount = returnAmount;
        _outgoingTransactionFee = outgoingTransactionFee;
        _exchangeFee = exchangeFee;
        _returnTransactionFee = returnTransactionFee;
        _nonce = [nonce copy];
    }
    return self;
}

+ (nonnull instancetype)composedExchangeWithSignedTransaction:(nullable NSString *)signedTransaction
                                                  fromAccount:(nonnull ZKAccount *)fromAccount
                                                    toAccount:(nonnull ZKAccount *)toAccount
                                                 exchangeRate:(nonnull ZKExchangeRate *)exchangeRate
                                              exchangeSetting:(nonnull ZKExchangeSetting *)exchangeSetting
                                              exchangeAddress:(nullable NSString *)exchangeAddress
                                                       amount:(nonnull NSDecimalNumber *)amount
                                                 returnAmount:(nonnull NSDecimalNumber *)returnAmount
                                       outgoingTransactionFee:(nonnull NSDecimalNumber *)outgoingTransactionFee
                                                  exchangeFee:(nonnull NSDecimalNumber *)exchangeFee
                                         returnTransactionFee:(nonnull NSDecimalNumber *)returnTransactionFee
                                                        nonce:(nonnull NSString *)nonce
{
    return [(ZKComposedExchange*)[self alloc] initWithSignedTransaction:signedTransaction
                                                            fromAccount:fromAccount
                                                              toAccount:toAccount
                                                           exchangeRate:exchangeRate
                                                        exchangeSetting:exchangeSetting
                                                        exchangeAddress:exchangeAddress
                                                                 amount:amount
                                                           returnAmount:returnAmount
                                                 outgoingTransactionFee:outgoingTransactionFee
                                                            exchangeFee:exchangeFee
                                                   returnTransactionFee:returnTransactionFee
                                                                  nonce:nonce];
}

- (BOOL)isEqual:(id)other
{
    if (![other isKindOfClass:[ZKComposedExchange class]]) {
        return NO;
    }
    ZKComposedExchange *typedOther = (ZKComposedExchange *)other;
    return ((self.signedTransaction == nil && typedOther.signedTransaction == nil) || (self.signedTransaction != nil && [self.signedTransaction isEqual:typedOther.signedTransaction])) &&
            [self.fromAccount isEqual:typedOther.fromAccount] &&
            [self.toAccount isEqual:typedOther.toAccount] &&
            [self.exchangeRate isEqual:typedOther.exchangeRate] &&
            [self.exchangeSetting isEqual:typedOther.exchangeSetting] &&
            ((self.exchangeAddress == nil && typedOther.exchangeAddress == nil) || (self.exchangeAddress != nil && [self.exchangeAddress isEqual:typedOther.exchangeAddress])) &&
            [self.amount isEqual:typedOther.amount] &&
            [self.returnAmount isEqual:typedOther.returnAmount] &&
            [self.outgoingTransactionFee isEqual:typedOther.outgoingTransactionFee] &&
            [self.exchangeFee isEqual:typedOther.exchangeFee] &&
            [self.returnTransactionFee isEqual:typedOther.returnTransactionFee] &&
            [self.nonce isEqualToString:typedOther.nonce];
}

- (NSUInteger)hash
{
    return NSStringFromClass([self class]).hash ^
            self.signedTransaction.hash ^
            self.fromAccount.hash ^
            self.toAccount.hash ^
            self.exchangeRate.hash ^
            self.exchangeSetting.hash ^
            self.exchangeAddress.hash ^
            ((NSUInteger)self.amount) ^
            ((NSUInteger)self.returnAmount) ^
            ((NSUInteger)self.outgoingTransactionFee) ^
            ((NSUInteger)self.exchangeFee) ^
            ((NSUInteger)self.returnTransactionFee) ^
            self.nonce.hash;
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p signedTransaction:%@ fromAccount:%@ toAccount:%@ exchangeRate:%@ exchangeSetting:%@ exchangeAddress:%@ amount:%@ returnAmount:%@ outgoingTransactionFee:%@ exchangeFee:%@ returnTransactionFee:%@ nonce:%@>", self.class, (void *)self, self.signedTransaction, self.fromAccount, self.toAccount, self.exchangeRate, self.exchangeSetting, self.exchangeAddress, self.amount, self.returnAmount, self.outgoingTransactionFee, self.exchangeFee, self.returnTransactionFee, self.nonce];
}

@end
