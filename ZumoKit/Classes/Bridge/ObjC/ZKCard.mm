// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.djinni

#import "ZKCard.h"


@implementation ZKCard

- (nonnull instancetype)initWithId:(nonnull NSString *)id
                         accountId:(nonnull NSString *)accountId
                          cardType:(nonnull NSString *)cardType
                        cardStatus:(nonnull NSString *)cardStatus
                             limit:(int32_t)limit
                         maskedPan:(nonnull NSString *)maskedPan
                            expiry:(nonnull NSString *)expiry
                               sca:(BOOL)sca
{
    if (self = [super init]) {
        _id = [id copy];
        _accountId = [accountId copy];
        _cardType = [cardType copy];
        _cardStatus = [cardStatus copy];
        _limit = limit;
        _maskedPan = [maskedPan copy];
        _expiry = [expiry copy];
        _sca = sca;
    }
    return self;
}

+ (nonnull instancetype)cardWithId:(nonnull NSString *)id
                         accountId:(nonnull NSString *)accountId
                          cardType:(nonnull NSString *)cardType
                        cardStatus:(nonnull NSString *)cardStatus
                             limit:(int32_t)limit
                         maskedPan:(nonnull NSString *)maskedPan
                            expiry:(nonnull NSString *)expiry
                               sca:(BOOL)sca
{
    return [(ZKCard*)[self alloc] initWithId:id
                                   accountId:accountId
                                    cardType:cardType
                                  cardStatus:cardStatus
                                       limit:limit
                                   maskedPan:maskedPan
                                      expiry:expiry
                                         sca:sca];
}

- (BOOL)isEqual:(id)other
{
    if (![other isKindOfClass:[ZKCard class]]) {
        return NO;
    }
    ZKCard *typedOther = (ZKCard *)other;
    return [self.id isEqualToString:typedOther.id] &&
            [self.accountId isEqualToString:typedOther.accountId] &&
            [self.cardType isEqualToString:typedOther.cardType] &&
            [self.cardStatus isEqualToString:typedOther.cardStatus] &&
            self.limit == typedOther.limit &&
            [self.maskedPan isEqualToString:typedOther.maskedPan] &&
            [self.expiry isEqualToString:typedOther.expiry] &&
            self.sca == typedOther.sca;
}

- (NSUInteger)hash
{
    return NSStringFromClass([self class]).hash ^
            self.id.hash ^
            self.accountId.hash ^
            self.cardType.hash ^
            self.cardStatus.hash ^
            (NSUInteger)self.limit ^
            self.maskedPan.hash ^
            self.expiry.hash ^
            (NSUInteger)self.sca;
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p id:%@ accountId:%@ cardType:%@ cardStatus:%@ limit:%@ maskedPan:%@ expiry:%@ sca:%@>", self.class, (void *)self, self.id, self.accountId, self.cardType, self.cardStatus, @(self.limit), self.maskedPan, self.expiry, @(self.sca)];
}

@end
