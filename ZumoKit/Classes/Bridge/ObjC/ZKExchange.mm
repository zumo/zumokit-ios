// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.djinni

#import "ZKExchange.h"


@implementation ZKExchange

- (nonnull instancetype)initWithId:(nonnull NSString *)id
                            status:(nonnull NSString *)status
                              pair:(nonnull NSString *)pair
                              side:(nonnull NSString *)side
                             price:(nonnull NSDecimalNumber *)price
                            amount:(nonnull NSDecimalNumber *)amount
                    debitAccountId:(nonnull NSString *)debitAccountId
                debitTransactionId:(nonnull NSString *)debitTransactionId
                   creditAccountId:(nonnull NSString *)creditAccountId
               creditTransactionId:(nullable NSString *)creditTransactionId
                             quote:(nonnull ZKQuote *)quote
                             rates:(nonnull NSDictionary<NSString *, NSDictionary<NSString *, NSDecimalNumber *> *> *)rates
                             nonce:(nullable NSString *)nonce
                         createdAt:(nonnull NSString *)createdAt
                         updatedAt:(nonnull NSString *)updatedAt
{
    if (self = [super init]) {
        _id = [id copy];
        _status = [status copy];
        _pair = [pair copy];
        _side = [side copy];
        _price = price;
        _amount = amount;
        _debitAccountId = [debitAccountId copy];
        _debitTransactionId = [debitTransactionId copy];
        _creditAccountId = [creditAccountId copy];
        _creditTransactionId = [creditTransactionId copy];
        _quote = quote;
        _rates = [rates copy];
        _nonce = [nonce copy];
        _createdAt = [createdAt copy];
        _updatedAt = [updatedAt copy];
    }
    return self;
}

+ (nonnull instancetype)exchangeWithId:(nonnull NSString *)id
                                status:(nonnull NSString *)status
                                  pair:(nonnull NSString *)pair
                                  side:(nonnull NSString *)side
                                 price:(nonnull NSDecimalNumber *)price
                                amount:(nonnull NSDecimalNumber *)amount
                        debitAccountId:(nonnull NSString *)debitAccountId
                    debitTransactionId:(nonnull NSString *)debitTransactionId
                       creditAccountId:(nonnull NSString *)creditAccountId
                   creditTransactionId:(nullable NSString *)creditTransactionId
                                 quote:(nonnull ZKQuote *)quote
                                 rates:(nonnull NSDictionary<NSString *, NSDictionary<NSString *, NSDecimalNumber *> *> *)rates
                                 nonce:(nullable NSString *)nonce
                             createdAt:(nonnull NSString *)createdAt
                             updatedAt:(nonnull NSString *)updatedAt
{
    return [(ZKExchange*)[self alloc] initWithId:id
                                          status:status
                                            pair:pair
                                            side:side
                                           price:price
                                          amount:amount
                                  debitAccountId:debitAccountId
                              debitTransactionId:debitTransactionId
                                 creditAccountId:creditAccountId
                             creditTransactionId:creditTransactionId
                                           quote:quote
                                           rates:rates
                                           nonce:nonce
                                       createdAt:createdAt
                                       updatedAt:updatedAt];
}

- (BOOL)isEqual:(id)other
{
    if (![other isKindOfClass:[ZKExchange class]]) {
        return NO;
    }
    ZKExchange *typedOther = (ZKExchange *)other;
    return [self.id isEqualToString:typedOther.id] &&
            [self.status isEqualToString:typedOther.status] &&
            [self.pair isEqualToString:typedOther.pair] &&
            [self.side isEqualToString:typedOther.side] &&
            [self.price isEqual:typedOther.price] &&
            [self.amount isEqual:typedOther.amount] &&
            [self.debitAccountId isEqualToString:typedOther.debitAccountId] &&
            [self.debitTransactionId isEqualToString:typedOther.debitTransactionId] &&
            [self.creditAccountId isEqualToString:typedOther.creditAccountId] &&
            ((self.creditTransactionId == nil && typedOther.creditTransactionId == nil) || (self.creditTransactionId != nil && [self.creditTransactionId isEqual:typedOther.creditTransactionId])) &&
            [self.quote isEqual:typedOther.quote] &&
            [self.rates isEqualToDictionary:typedOther.rates] &&
            ((self.nonce == nil && typedOther.nonce == nil) || (self.nonce != nil && [self.nonce isEqual:typedOther.nonce])) &&
            [self.createdAt isEqualToString:typedOther.createdAt] &&
            [self.updatedAt isEqualToString:typedOther.updatedAt];
}

- (NSUInteger)hash
{
    return NSStringFromClass([self class]).hash ^
            self.id.hash ^
            self.status.hash ^
            self.pair.hash ^
            self.side.hash ^
            ((NSUInteger)self.price) ^
            ((NSUInteger)self.amount) ^
            self.debitAccountId.hash ^
            self.debitTransactionId.hash ^
            self.creditAccountId.hash ^
            self.creditTransactionId.hash ^
            self.quote.hash ^
            self.rates.hash ^
            self.nonce.hash ^
            self.createdAt.hash ^
            self.updatedAt.hash;
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p id:%@ status:%@ pair:%@ side:%@ price:%@ amount:%@ debitAccountId:%@ debitTransactionId:%@ creditAccountId:%@ creditTransactionId:%@ quote:%@ rates:%@ nonce:%@ createdAt:%@ updatedAt:%@>", self.class, (void *)self, self.id, self.status, self.pair, self.side, self.price, self.amount, self.debitAccountId, self.debitTransactionId, self.creditAccountId, self.creditTransactionId, self.quote, self.rates, self.nonce, self.createdAt, self.updatedAt];
}

@end
