// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from state.djinni

#import "ZKExchange.h"


@implementation ZKExchange

- (nonnull instancetype)initWithId:(nonnull NSString *)id
                            status:(nonnull NSString *)status
                   depositCurrency:(nonnull NSString *)depositCurrency
                  depositAccountId:(nonnull NSString *)depositAccountId
              depositTransactionId:(nullable NSString *)depositTransactionId
                  withdrawCurrency:(nonnull NSString *)withdrawCurrency
                 withdrawAccountId:(nonnull NSString *)withdrawAccountId
             withdrawTransactionId:(nullable NSString *)withdrawTransactionId
                            amount:(nonnull NSString *)amount
                        depositFee:(nullable NSString *)depositFee
                      returnAmount:(nonnull NSString *)returnAmount
                       exchangeFee:(nonnull NSString *)exchangeFee
                       withdrawFee:(nonnull NSString *)withdrawFee
                      exchangeRate:(nonnull ZKExchangeRate *)exchangeRate
                  exchangeSettings:(nonnull ZKExchangeSettings *)exchangeSettings
                     exchangeRates:(nonnull NSDictionary<NSString *, NSDictionary<NSString *, ZKExchangeRate *> *> *)exchangeRates
                       submittedAt:(nullable NSNumber *)submittedAt
                       confirmedAt:(nullable NSNumber *)confirmedAt
{
    if (self = [super init]) {
        _id = [id copy];
        _status = [status copy];
        _depositCurrency = [depositCurrency copy];
        _depositAccountId = [depositAccountId copy];
        _depositTransactionId = [depositTransactionId copy];
        _withdrawCurrency = [withdrawCurrency copy];
        _withdrawAccountId = [withdrawAccountId copy];
        _withdrawTransactionId = [withdrawTransactionId copy];
        _amount = [amount copy];
        _depositFee = [depositFee copy];
        _returnAmount = [returnAmount copy];
        _exchangeFee = [exchangeFee copy];
        _withdrawFee = [withdrawFee copy];
        _exchangeRate = exchangeRate;
        _exchangeSettings = exchangeSettings;
        _exchangeRates = [exchangeRates copy];
        _submittedAt = submittedAt;
        _confirmedAt = confirmedAt;
    }
    return self;
}

+ (nonnull instancetype)exchangeWithId:(nonnull NSString *)id
                                status:(nonnull NSString *)status
                       depositCurrency:(nonnull NSString *)depositCurrency
                      depositAccountId:(nonnull NSString *)depositAccountId
                  depositTransactionId:(nullable NSString *)depositTransactionId
                      withdrawCurrency:(nonnull NSString *)withdrawCurrency
                     withdrawAccountId:(nonnull NSString *)withdrawAccountId
                 withdrawTransactionId:(nullable NSString *)withdrawTransactionId
                                amount:(nonnull NSString *)amount
                            depositFee:(nullable NSString *)depositFee
                          returnAmount:(nonnull NSString *)returnAmount
                           exchangeFee:(nonnull NSString *)exchangeFee
                           withdrawFee:(nonnull NSString *)withdrawFee
                          exchangeRate:(nonnull ZKExchangeRate *)exchangeRate
                      exchangeSettings:(nonnull ZKExchangeSettings *)exchangeSettings
                         exchangeRates:(nonnull NSDictionary<NSString *, NSDictionary<NSString *, ZKExchangeRate *> *> *)exchangeRates
                           submittedAt:(nullable NSNumber *)submittedAt
                           confirmedAt:(nullable NSNumber *)confirmedAt
{
    return [(ZKExchange*)[self alloc] initWithId:id
                                          status:status
                                 depositCurrency:depositCurrency
                                depositAccountId:depositAccountId
                            depositTransactionId:depositTransactionId
                                withdrawCurrency:withdrawCurrency
                               withdrawAccountId:withdrawAccountId
                           withdrawTransactionId:withdrawTransactionId
                                          amount:amount
                                      depositFee:depositFee
                                    returnAmount:returnAmount
                                     exchangeFee:exchangeFee
                                     withdrawFee:withdrawFee
                                    exchangeRate:exchangeRate
                                exchangeSettings:exchangeSettings
                                   exchangeRates:exchangeRates
                                     submittedAt:submittedAt
                                     confirmedAt:confirmedAt];
}

- (BOOL)isEqual:(id)other
{
    if (![other isKindOfClass:[ZKExchange class]]) {
        return NO;
    }
    ZKExchange *typedOther = (ZKExchange *)other;
    return [self.id isEqualToString:typedOther.id] &&
            [self.status isEqualToString:typedOther.status] &&
            [self.depositCurrency isEqualToString:typedOther.depositCurrency] &&
            [self.depositAccountId isEqualToString:typedOther.depositAccountId] &&
            ((self.depositTransactionId == nil && typedOther.depositTransactionId == nil) || (self.depositTransactionId != nil && [self.depositTransactionId isEqual:typedOther.depositTransactionId])) &&
            [self.withdrawCurrency isEqualToString:typedOther.withdrawCurrency] &&
            [self.withdrawAccountId isEqualToString:typedOther.withdrawAccountId] &&
            ((self.withdrawTransactionId == nil && typedOther.withdrawTransactionId == nil) || (self.withdrawTransactionId != nil && [self.withdrawTransactionId isEqual:typedOther.withdrawTransactionId])) &&
            [self.amount isEqualToString:typedOther.amount] &&
            ((self.depositFee == nil && typedOther.depositFee == nil) || (self.depositFee != nil && [self.depositFee isEqual:typedOther.depositFee])) &&
            [self.returnAmount isEqualToString:typedOther.returnAmount] &&
            [self.exchangeFee isEqualToString:typedOther.exchangeFee] &&
            [self.withdrawFee isEqualToString:typedOther.withdrawFee] &&
            [self.exchangeRate isEqual:typedOther.exchangeRate] &&
            [self.exchangeSettings isEqual:typedOther.exchangeSettings] &&
            [self.exchangeRates isEqualToDictionary:typedOther.exchangeRates] &&
            ((self.submittedAt == nil && typedOther.submittedAt == nil) || (self.submittedAt != nil && [self.submittedAt isEqual:typedOther.submittedAt])) &&
            ((self.confirmedAt == nil && typedOther.confirmedAt == nil) || (self.confirmedAt != nil && [self.confirmedAt isEqual:typedOther.confirmedAt]));
}

- (NSUInteger)hash
{
    return NSStringFromClass([self class]).hash ^
            self.id.hash ^
            self.status.hash ^
            self.depositCurrency.hash ^
            self.depositAccountId.hash ^
            self.depositTransactionId.hash ^
            self.withdrawCurrency.hash ^
            self.withdrawAccountId.hash ^
            self.withdrawTransactionId.hash ^
            self.amount.hash ^
            self.depositFee.hash ^
            self.returnAmount.hash ^
            self.exchangeFee.hash ^
            self.withdrawFee.hash ^
            self.exchangeRate.hash ^
            self.exchangeSettings.hash ^
            self.exchangeRates.hash ^
            self.submittedAt.hash ^
            self.confirmedAt.hash;
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p id:%@ status:%@ depositCurrency:%@ depositAccountId:%@ depositTransactionId:%@ withdrawCurrency:%@ withdrawAccountId:%@ withdrawTransactionId:%@ amount:%@ depositFee:%@ returnAmount:%@ exchangeFee:%@ withdrawFee:%@ exchangeRate:%@ exchangeSettings:%@ exchangeRates:%@ submittedAt:%@ confirmedAt:%@>", self.class, (void *)self, self.id, self.status, self.depositCurrency, self.depositAccountId, self.depositTransactionId, self.withdrawCurrency, self.withdrawAccountId, self.withdrawTransactionId, self.amount, self.depositFee, self.returnAmount, self.exchangeFee, self.withdrawFee, self.exchangeRate, self.exchangeSettings, self.exchangeRates, self.submittedAt, self.confirmedAt];
}

@end
