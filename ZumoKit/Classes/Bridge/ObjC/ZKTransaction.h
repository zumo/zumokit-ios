// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.djinni

#import "ZKExchange.h"
#import "ZKTransactionCryptoProperties.h"
#import "ZKTransactionFiatProperties.h"
#import <Foundation/Foundation.h>

/** Record containing transaction details. */
@interface ZKTransaction : NSObject
- (nonnull instancetype)initWithId:(nonnull NSString *)id
                              type:(nonnull NSString *)type
                      currencyCode:(nonnull NSString *)currencyCode
                         direction:(nonnull NSString *)direction
                        fromUserId:(nullable NSString *)fromUserId
                          toUserId:(nullable NSString *)toUserId
                     fromAccountId:(nullable NSString *)fromAccountId
                       toAccountId:(nullable NSString *)toAccountId
                           network:(nonnull NSString *)network
                            status:(nonnull NSString *)status
                            amount:(nullable NSDecimalNumber *)amount
                               fee:(nullable NSDecimalNumber *)fee
                             nonce:(nullable NSString *)nonce
                  cryptoProperties:(nullable ZKTransactionCryptoProperties *)cryptoProperties
                    fiatProperties:(nullable ZKTransactionFiatProperties *)fiatProperties
                          exchange:(nullable ZKExchange *)exchange
                       submittedAt:(nullable NSNumber *)submittedAt
                       confirmedAt:(nullable NSNumber *)confirmedAt
                         timestamp:(int32_t)timestamp;
+ (nonnull instancetype)transactionWithId:(nonnull NSString *)id
                                     type:(nonnull NSString *)type
                             currencyCode:(nonnull NSString *)currencyCode
                                direction:(nonnull NSString *)direction
                               fromUserId:(nullable NSString *)fromUserId
                                 toUserId:(nullable NSString *)toUserId
                            fromAccountId:(nullable NSString *)fromAccountId
                              toAccountId:(nullable NSString *)toAccountId
                                  network:(nonnull NSString *)network
                                   status:(nonnull NSString *)status
                                   amount:(nullable NSDecimalNumber *)amount
                                      fee:(nullable NSDecimalNumber *)fee
                                    nonce:(nullable NSString *)nonce
                         cryptoProperties:(nullable ZKTransactionCryptoProperties *)cryptoProperties
                           fiatProperties:(nullable ZKTransactionFiatProperties *)fiatProperties
                                 exchange:(nullable ZKExchange *)exchange
                              submittedAt:(nullable NSNumber *)submittedAt
                              confirmedAt:(nullable NSNumber *)confirmedAt
                                timestamp:(int32_t)timestamp;

/** Identifier. */
@property (nonatomic, readonly, nonnull) NSString * id;

/**
 * Transaction type.
 * @see `ZKTransactionType`
 */
@property (nonatomic, readonly, nonnull) NSString * type;

/**
 * Currency code.
 * @see `ZKCurrencyCode`
 */
@property (nonatomic, readonly, nonnull) NSString * currencyCode;

/**
 * Transaction direction relative to `ZKAccountDataSnapshot` .
 * @see `ZKTransactionDirection`
 */
@property (nonatomic, readonly, nonnull) NSString * direction;

/** Sender integrator user identifier or null if it is external user. */
@property (nonatomic, readonly, nullable) NSString * fromUserId;

/** Recipient integrator user identifier or null if it is external user. */
@property (nonatomic, readonly, nullable) NSString * toUserId;

/** Sender account identifier if it is internal transaction or null otherwise. */
@property (nonatomic, readonly, nullable) NSString * fromAccountId;

/** Recipient account identifier if it is internal transaction or null otherwise. */
@property (nonatomic, readonly, nullable) NSString * toAccountId;

/**
 * Network type.
 * @see `ZKNetworkType`
 */
@property (nonatomic, readonly, nonnull) NSString * network;

/**
 * Transaction status.
 * @see `ZKTransactionStatus`
 */
@property (nonatomic, readonly, nonnull) NSString * status;

/** Amount in transaction currency or null if transaction is Ethereum contract deploy. */
@property (nonatomic, readonly, nullable) NSDecimalNumber * amount;

/** Transaction fee in transaction currency or null, if not yet available. */
@property (nonatomic, readonly, nullable) NSDecimalNumber * fee;

/** Transaction nonce or null. Used to prevent double spend. */
@property (nonatomic, readonly, nullable) NSString * nonce;

/**
 * Crypto properties if it is a crypto transaction, null otherwise.
 * @see `ZKTransactionType`
 */
@property (nonatomic, readonly, nullable) ZKTransactionCryptoProperties * cryptoProperties;

/**
 * Fiat properties if it is a fiat transaction, null otherwise.
 * @see `ZKTransactionType`
 */
@property (nonatomic, readonly, nullable) ZKTransactionFiatProperties * fiatProperties;

/**
 * Exchange properties if it is a transaction associated with an exchange, null otherwise.
 * @see `ZKTransactionType`
 */
@property (nonatomic, readonly, nullable) ZKExchange * exchange;

/** Epoch timestamp when transaction was submitted or null for incoming transactions from outside of Zumo ecosystem. */
@property (nonatomic, readonly, nullable) NSNumber * submittedAt;

/** Epoch timestamp when transaction was submitted or null if transaction was not confirmed yet. */
@property (nonatomic, readonly, nullable) NSNumber * confirmedAt;

/** Epoch timestamp, minimum non-null value between submitted at and confirmed at timestamps. */
@property (nonatomic, readonly) int32_t timestamp;

@end
