// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.djinni

#import "ZKExchangeRate.h"


@implementation ZKExchangeRate

- (nonnull instancetype)initWithId:(nonnull NSString *)id
                      fromCurrency:(nonnull NSString *)fromCurrency
                        toCurrency:(nonnull NSString *)toCurrency
                             value:(nonnull NSDecimalNumber *)value
                           validTo:(int64_t)validTo
                         timestamp:(int64_t)timestamp
{
    if (self = [super init]) {
        _id = [id copy];
        _fromCurrency = [fromCurrency copy];
        _toCurrency = [toCurrency copy];
        _value = value;
        _validTo = validTo;
        _timestamp = timestamp;
    }
    return self;
}

+ (nonnull instancetype)exchangeRateWithId:(nonnull NSString *)id
                              fromCurrency:(nonnull NSString *)fromCurrency
                                toCurrency:(nonnull NSString *)toCurrency
                                     value:(nonnull NSDecimalNumber *)value
                                   validTo:(int64_t)validTo
                                 timestamp:(int64_t)timestamp
{
    return [(ZKExchangeRate*)[self alloc] initWithId:id
                                        fromCurrency:fromCurrency
                                          toCurrency:toCurrency
                                               value:value
                                             validTo:validTo
                                           timestamp:timestamp];
}

- (BOOL)isEqual:(id)other
{
    if (![other isKindOfClass:[ZKExchangeRate class]]) {
        return NO;
    }
    ZKExchangeRate *typedOther = (ZKExchangeRate *)other;
    return [self.id isEqualToString:typedOther.id] &&
            [self.fromCurrency isEqualToString:typedOther.fromCurrency] &&
            [self.toCurrency isEqualToString:typedOther.toCurrency] &&
            [self.value isEqual:typedOther.value] &&
            self.validTo == typedOther.validTo &&
            self.timestamp == typedOther.timestamp;
}

- (NSUInteger)hash
{
    return NSStringFromClass([self class]).hash ^
            self.id.hash ^
            self.fromCurrency.hash ^
            self.toCurrency.hash ^
            ((NSUInteger)self.value) ^
            (NSUInteger)self.validTo ^
            (NSUInteger)self.timestamp;
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p id:%@ fromCurrency:%@ toCurrency:%@ value:%@ validTo:%@ timestamp:%@>", self.class, (void *)self, self.id, self.fromCurrency, self.toCurrency, self.value, @(self.validTo), @(self.timestamp)];
}

@end
