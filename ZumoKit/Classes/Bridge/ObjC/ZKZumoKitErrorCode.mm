// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from errors.djinni

#import "ZKZumoKitErrorCode.h"


NSString * __nonnull const ZKZumoKitErrorCodeUNKNOWNERROR = @"unknown_error";

NSString * __nonnull const ZKZumoKitErrorCodeACCOUNTLIMITEXCEEDED = @"account_limit_exceeded";

NSString * __nonnull const ZKZumoKitErrorCodeALREADYFIATCUSTOMER = @"already_fiat_customer";

NSString * __nonnull const ZKZumoKitErrorCodeACCOUNTNOTFOUND = @"account_not_found";

NSString * __nonnull const ZKZumoKitErrorCodeAMOUNTNOTSET = @"amount_not_set";

NSString * __nonnull const ZKZumoKitErrorCodeAPISERVICEERROR = @"api_service_error";

NSString * __nonnull const ZKZumoKitErrorCodeCARDNOTFOUND = @"card_not_found";

NSString * __nonnull const ZKZumoKitErrorCodeCARDSERVICEERROR = @"card_service_error";

NSString * __nonnull const ZKZumoKitErrorCodeCHANGEACCOUNTNOTFOUND = @"change_account_not_found";

NSString * __nonnull const ZKZumoKitErrorCodeCHANGEINDEXOUTOFRANGE = @"change_index_out_of_range";

NSString * __nonnull const ZKZumoKitErrorCodeDATAOVERFLOW = @"data_overflow";

NSString * __nonnull const ZKZumoKitErrorCodeDATAPROVIDEDWHENSENDMAXSET = @"data_provided_when_send_max_set";

NSString * __nonnull const ZKZumoKitErrorCodeDESTINATIONPROVIDEDWHENWITHDRAWSET = @"destination_provided_when_withdraw_set";

NSString * __nonnull const ZKZumoKitErrorCodeEXCHANGEAMOUNTTOOLOW = @"exchange_amount_too_low";

NSString * __nonnull const ZKZumoKitErrorCodeEXCHANGECURRENCIESMUSTBEDIFFERENT = @"exchange_currencies_must_be_different";

NSString * __nonnull const ZKZumoKitErrorCodeEXCHANGERETURNVALUENEGATIVE = @"exchange_return_value_negative";

NSString * __nonnull const ZKZumoKitErrorCodeFIATACCOUNTEXPECTED = @"fiat_account_expected";

NSString * __nonnull const ZKZumoKitErrorCodeGASOVERFLOW = @"gas_overflow";

NSString * __nonnull const ZKZumoKitErrorCodeGASTOOLOW = @"gas_too_low";

NSString * __nonnull const ZKZumoKitErrorCodeINCOMPATIBLENETWORKTYPES = @"incompatible_network_types";

NSString * __nonnull const ZKZumoKitErrorCodeINCORRECTACCOUNTSELECTED = @"incorrect_account_selected";

NSString * __nonnull const ZKZumoKitErrorCodeINCORRECTCHANGEACCOUNTSELECTED = @"incorrect_change_account_selected";

NSString * __nonnull const ZKZumoKitErrorCodeINSUFFICIENTFUNDSFOREXCHANGE = @"insufficient_funds_for_exchange";

NSString * __nonnull const ZKZumoKitErrorCodeINSUFFICIENTFUNDSFORTRANSACTION = @"insufficient_funds_for_transaction";

NSString * __nonnull const ZKZumoKitErrorCodeINT64OVERFLOW = @"int64_overflow";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDACCOUNTTYPE = @"invalid_account_type";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDADDRESS = @"invalid_address";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDAPIRESPONSE = @"invalid_api_response";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDEXCHANGEADDRESS = @"invalid_exchange_address";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDEXCHANGERATE = @"invalid_exchange_rate";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDEXCHANGESETTING = @"invalid_exchange_setting";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDFEERATE = @"invalid_fee_rate";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDHDWALLETPATH = @"invalid_hd_wallet_path";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDMNEMONICWORDCOUNT = @"invalid_mnemonic_word_count";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDNETWORKTYPE = @"invalid_network_type";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDPASSWORD = @"invalid_password";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDRECOVERYPHRASE = @"invalid_recovery_phrase";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDTRANSACTIONTYPE = @"invalid_transaction_type";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDTRANSACTIONVALUE = @"invalid_transaction_value";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDUSERTOKENSET = @"invalid_user_token_set";

NSString * __nonnull const ZKZumoKitErrorCodeINVALIDWEBSOCKETRESPONSE = @"invalid_websocket_response";

NSString * __nonnull const ZKZumoKitErrorCodeKNOWNTRANSACTION = @"known_transaction";

NSString * __nonnull const ZKZumoKitErrorCodeNODESTINATIONADDRESS = @"no_destination_address";

NSString * __nonnull const ZKZumoKitErrorCodeNONOMINATEDACCOUNTFOUND = @"no_nominated_account_found";

NSString * __nonnull const ZKZumoKitErrorCodeNOWALLETFOUND = @"no_wallet_found";

NSString * __nonnull const ZKZumoKitErrorCodeNONCEOVERFLOW = @"nonce_overflow";

NSString * __nonnull const ZKZumoKitErrorCodeNOTAUTHORIZED = @"not_authorized";

NSString * __nonnull const ZKZumoKitErrorCodeSENDMAXINSUFFICIENTFUNDSFORFEE = @"send_max_insufficient_funds_for_fee";

NSString * __nonnull const ZKZumoKitErrorCodeSENDMAXINSUFFICIENTFUNDSFORTRANSACTION = @"send_max_insufficient_funds_for_transaction";

NSString * __nonnull const ZKZumoKitErrorCodeSENDMAXINSUFFICIENTFUNDSFOREXCHANGE = @"send_max_insufficient_funds_for_exchange";

NSString * __nonnull const ZKZumoKitErrorCodeSIGNINGERROR = @"signing_error";

NSString * __nonnull const ZKZumoKitErrorCodeTRANSACTIONAMOUNTOVERFLOW = @"transaction_amount_overflow";

NSString * __nonnull const ZKZumoKitErrorCodeTRANSACTIONAMOUNTTOOSMALL = @"transaction_amount_too_small";

NSString * __nonnull const ZKZumoKitErrorCodeTRANSACTIONSERVICEERROR = @"transaction_service_error";

NSString * __nonnull const ZKZumoKitErrorCodeTRANSACTIONTOOLARGE = @"transaction_too_large";

NSString * __nonnull const ZKZumoKitErrorCodeUSERNOTFIATCUSTOMER = @"user_not_fiat_customer";

NSString * __nonnull const ZKZumoKitErrorCodeUTXOSIGNINGERROR = @"utxo_signing_error";

NSString * __nonnull const ZKZumoKitErrorCodeAMOUNTPROVIDEDWHENSENDMAXSET = @"amount_provided_when_send_max_set";

NSString * __nonnull const ZKZumoKitErrorCodeWALLETLIMITEXCEEDED = @"wallet_limit_exceeded";

@implementation ZKZumoKitErrorCode

- (nonnull instancetype)init
{
    if (self = [super init]) {
    }
    return self;
}

+ (nonnull instancetype)zumoKitErrorCode
{
    return [(ZKZumoKitErrorCode*)[self alloc] init];
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p>", self.class, (void *)self];
}

@end
