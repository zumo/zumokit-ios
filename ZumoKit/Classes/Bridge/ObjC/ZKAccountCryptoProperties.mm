// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.djinni

#import "ZKAccountCryptoProperties.h"


@implementation ZKAccountCryptoProperties

- (nonnull instancetype)initWithAddress:(nonnull NSString *)address
                                   path:(nonnull NSString *)path
                                  nonce:(nullable NSNumber *)nonce
                               utxoPool:(nullable NSString *)utxoPool
                                version:(int8_t)version
{
    if (self = [super init]) {
        _address = [address copy];
        _path = [path copy];
        _nonce = nonce;
        _utxoPool = [utxoPool copy];
        _version = version;
    }
    return self;
}

+ (nonnull instancetype)accountCryptoPropertiesWithAddress:(nonnull NSString *)address
                                                      path:(nonnull NSString *)path
                                                     nonce:(nullable NSNumber *)nonce
                                                  utxoPool:(nullable NSString *)utxoPool
                                                   version:(int8_t)version
{
    return [(ZKAccountCryptoProperties*)[self alloc] initWithAddress:address
                                                                path:path
                                                               nonce:nonce
                                                            utxoPool:utxoPool
                                                             version:version];
}

- (BOOL)isEqual:(id)other
{
    if (![other isKindOfClass:[ZKAccountCryptoProperties class]]) {
        return NO;
    }
    ZKAccountCryptoProperties *typedOther = (ZKAccountCryptoProperties *)other;
    return [self.address isEqualToString:typedOther.address] &&
            [self.path isEqualToString:typedOther.path] &&
            ((self.nonce == nil && typedOther.nonce == nil) || (self.nonce != nil && [self.nonce isEqual:typedOther.nonce])) &&
            ((self.utxoPool == nil && typedOther.utxoPool == nil) || (self.utxoPool != nil && [self.utxoPool isEqual:typedOther.utxoPool])) &&
            self.version == typedOther.version;
}

- (NSUInteger)hash
{
    return NSStringFromClass([self class]).hash ^
            self.address.hash ^
            self.path.hash ^
            self.nonce.hash ^
            self.utxoPool.hash ^
            (NSUInteger)self.version;
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p address:%@ path:%@ nonce:%@ utxoPool:%@ version:%@>", self.class, (void *)self, self.address, self.path, self.nonce, self.utxoPool, @(self.version)];
}

@end
