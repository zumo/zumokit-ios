// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from state.djinni

#import "ZKAccount.h"


@implementation ZKAccount

- (nonnull instancetype)initWithId:(nonnull NSString *)id
                              path:(nonnull NSString *)path
                            symbol:(nullable NSString *)symbol
                              coin:(nonnull NSString *)coin
                           address:(nonnull NSString *)address
                           balance:(nonnull NSString *)balance
                           chainId:(nullable NSNumber *)chainId
                             nonce:(nullable NSNumber *)nonce
{
    if (self = [super init]) {
        _id = [id copy];
        _path = [path copy];
        _symbol = [symbol copy];
        _coin = [coin copy];
        _address = [address copy];
        _balance = [balance copy];
        _chainId = chainId;
        _nonce = nonce;
    }
    return self;
}

+ (nonnull instancetype)accountWithId:(nonnull NSString *)id
                                 path:(nonnull NSString *)path
                               symbol:(nullable NSString *)symbol
                                 coin:(nonnull NSString *)coin
                              address:(nonnull NSString *)address
                              balance:(nonnull NSString *)balance
                              chainId:(nullable NSNumber *)chainId
                                nonce:(nullable NSNumber *)nonce
{
    return [(ZKAccount*)[self alloc] initWithId:id
                                           path:path
                                         symbol:symbol
                                           coin:coin
                                        address:address
                                        balance:balance
                                        chainId:chainId
                                          nonce:nonce];
}

- (BOOL)isEqual:(id)other
{
    if (![other isKindOfClass:[ZKAccount class]]) {
        return NO;
    }
    ZKAccount *typedOther = (ZKAccount *)other;
    return [self.id isEqualToString:typedOther.id] &&
            [self.path isEqualToString:typedOther.path] &&
            ((self.symbol == nil && typedOther.symbol == nil) || (self.symbol != nil && [self.symbol isEqual:typedOther.symbol])) &&
            [self.coin isEqualToString:typedOther.coin] &&
            [self.address isEqualToString:typedOther.address] &&
            [self.balance isEqualToString:typedOther.balance] &&
            ((self.chainId == nil && typedOther.chainId == nil) || (self.chainId != nil && [self.chainId isEqual:typedOther.chainId])) &&
            ((self.nonce == nil && typedOther.nonce == nil) || (self.nonce != nil && [self.nonce isEqual:typedOther.nonce]));
}

- (NSUInteger)hash
{
    return NSStringFromClass([self class]).hash ^
            self.id.hash ^
            self.path.hash ^
            self.symbol.hash ^
            self.coin.hash ^
            self.address.hash ^
            self.balance.hash ^
            self.chainId.hash ^
            self.nonce.hash;
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p id:%@ path:%@ symbol:%@ coin:%@ address:%@ balance:%@ chainId:%@ nonce:%@>", self.class, (void *)self, self.id, self.path, self.symbol, self.coin, self.address, self.balance, self.chainId, self.nonce];
}

@end
