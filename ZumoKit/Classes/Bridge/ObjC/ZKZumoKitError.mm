// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from errors.djinni

#import "ZKZumoKitError.h"


NSString * __nonnull const ZKZumoKitErrorAPICONNECTIONERROR = @"api_connection_error";

NSString * __nonnull const ZKZumoKitErrorAPIERROR = @"api_error";

NSString * __nonnull const ZKZumoKitErrorAUTHENTICATIONERROR = @"wallet_error";

NSString * __nonnull const ZKZumoKitErrorWALLETERROR = @"wallet_error";

NSString * __nonnull const ZKZumoKitErrorTRANSACTIONERROR = @"transaction_error";

NSString * __nonnull const ZKZumoKitErrorINVALIDREQUESTERROR = @"invalid_request_error";

NSString * __nonnull const ZKZumoKitErrorRATELIMITERROR = @"rate_limit_error";

NSString * __nonnull const ZKZumoKitErrorINVALIDARGUMENTERROR = @"invalid_argument_error";

@implementation ZKZumoKitError

- (nonnull instancetype)initWithType:(nonnull NSString *)type
                                code:(nullable NSString *)code
                             message:(nullable NSString *)message
{
    if (self = [super init]) {
        _type = [type copy];
        _code = [code copy];
        _message = [message copy];
    }
    return self;
}

+ (nonnull instancetype)zumoKitErrorWithType:(nonnull NSString *)type
                                        code:(nullable NSString *)code
                                     message:(nullable NSString *)message
{
    return [(ZKZumoKitError*)[self alloc] initWithType:type
                                                  code:code
                                               message:message];
}

- (BOOL)isEqual:(id)other
{
    if (![other isKindOfClass:[ZKZumoKitError class]]) {
        return NO;
    }
    ZKZumoKitError *typedOther = (ZKZumoKitError *)other;
    return [self.type isEqualToString:typedOther.type] &&
            ((self.code == nil && typedOther.code == nil) || (self.code != nil && [self.code isEqual:typedOther.code])) &&
            ((self.message == nil && typedOther.message == nil) || (self.message != nil && [self.message isEqual:typedOther.message]));
}

- (NSUInteger)hash
{
    return NSStringFromClass([self class]).hash ^
            self.type.hash ^
            self.code.hash ^
            self.message.hash;
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p type:%@ code:%@ message:%@>", self.class, (void *)self, self.type, self.code, self.message];
}

@end
