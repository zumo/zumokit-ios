// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.djinni

#import "ZKTransactionAmount.h"


@implementation ZKTransactionAmount

- (nonnull instancetype)initWithDirection:(nonnull NSString *)direction
                                   userId:(nullable NSString *)userId
                         userIntegratorId:(nullable NSString *)userIntegratorId
                                accountId:(nullable NSString *)accountId
                                   amount:(nullable NSDecimalNumber *)amount
                               fiatAmount:(nullable NSDictionary<NSString *, NSNumber *> *)fiatAmount
                                  address:(nullable NSString *)address
                                 isChange:(BOOL)isChange
                            accountNumber:(nullable NSString *)accountNumber
                                 sortCode:(nullable NSString *)sortCode
                                      bic:(nullable NSString *)bic
                                     iban:(nullable NSString *)iban
{
    if (self = [super init]) {
        _direction = [direction copy];
        _userId = [userId copy];
        _userIntegratorId = [userIntegratorId copy];
        _accountId = [accountId copy];
        _amount = amount;
        _fiatAmount = [fiatAmount copy];
        _address = [address copy];
        _isChange = isChange;
        _accountNumber = [accountNumber copy];
        _sortCode = [sortCode copy];
        _bic = [bic copy];
        _iban = [iban copy];
    }
    return self;
}

+ (nonnull instancetype)transactionAmountWithDirection:(nonnull NSString *)direction
                                                userId:(nullable NSString *)userId
                                      userIntegratorId:(nullable NSString *)userIntegratorId
                                             accountId:(nullable NSString *)accountId
                                                amount:(nullable NSDecimalNumber *)amount
                                            fiatAmount:(nullable NSDictionary<NSString *, NSNumber *> *)fiatAmount
                                               address:(nullable NSString *)address
                                              isChange:(BOOL)isChange
                                         accountNumber:(nullable NSString *)accountNumber
                                              sortCode:(nullable NSString *)sortCode
                                                   bic:(nullable NSString *)bic
                                                  iban:(nullable NSString *)iban
{
    return [(ZKTransactionAmount*)[self alloc] initWithDirection:direction
                                                          userId:userId
                                                userIntegratorId:userIntegratorId
                                                       accountId:accountId
                                                          amount:amount
                                                      fiatAmount:fiatAmount
                                                         address:address
                                                        isChange:isChange
                                                   accountNumber:accountNumber
                                                        sortCode:sortCode
                                                             bic:bic
                                                            iban:iban];
}

- (BOOL)isEqual:(id)other
{
    if (![other isKindOfClass:[ZKTransactionAmount class]]) {
        return NO;
    }
    ZKTransactionAmount *typedOther = (ZKTransactionAmount *)other;
    return [self.direction isEqualToString:typedOther.direction] &&
            ((self.userId == nil && typedOther.userId == nil) || (self.userId != nil && [self.userId isEqual:typedOther.userId])) &&
            ((self.userIntegratorId == nil && typedOther.userIntegratorId == nil) || (self.userIntegratorId != nil && [self.userIntegratorId isEqual:typedOther.userIntegratorId])) &&
            ((self.accountId == nil && typedOther.accountId == nil) || (self.accountId != nil && [self.accountId isEqual:typedOther.accountId])) &&
            ((self.amount == nil && typedOther.amount == nil) || (self.amount != nil && [self.amount isEqual:typedOther.amount])) &&
            ((self.fiatAmount == nil && typedOther.fiatAmount == nil) || (self.fiatAmount != nil && [self.fiatAmount isEqual:typedOther.fiatAmount])) &&
            ((self.address == nil && typedOther.address == nil) || (self.address != nil && [self.address isEqual:typedOther.address])) &&
            self.isChange == typedOther.isChange &&
            ((self.accountNumber == nil && typedOther.accountNumber == nil) || (self.accountNumber != nil && [self.accountNumber isEqual:typedOther.accountNumber])) &&
            ((self.sortCode == nil && typedOther.sortCode == nil) || (self.sortCode != nil && [self.sortCode isEqual:typedOther.sortCode])) &&
            ((self.bic == nil && typedOther.bic == nil) || (self.bic != nil && [self.bic isEqual:typedOther.bic])) &&
            ((self.iban == nil && typedOther.iban == nil) || (self.iban != nil && [self.iban isEqual:typedOther.iban]));
}

- (NSUInteger)hash
{
    return NSStringFromClass([self class]).hash ^
            self.direction.hash ^
            self.userId.hash ^
            self.userIntegratorId.hash ^
            self.accountId.hash ^
            self.amount.hash ^
            self.fiatAmount.hash ^
            self.address.hash ^
            (NSUInteger)self.isChange ^
            self.accountNumber.hash ^
            self.sortCode.hash ^
            self.bic.hash ^
            self.iban.hash;
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p direction:%@ userId:%@ userIntegratorId:%@ accountId:%@ amount:%@ fiatAmount:%@ address:%@ isChange:%@ accountNumber:%@ sortCode:%@ bic:%@ iban:%@>", self.class, (void *)self, self.direction, self.userId, self.userIntegratorId, self.accountId, self.amount, self.fiatAmount, self.address, @(self.isChange), self.accountNumber, self.sortCode, self.bic, self.iban];
}

@end
