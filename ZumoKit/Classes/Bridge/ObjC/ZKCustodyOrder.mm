// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.djinni

#import "ZKCustodyOrder.h"


@implementation ZKCustodyOrder

- (nonnull instancetype)initWithId:(nonnull NSString *)id
                              type:(nonnull NSString *)type
                            status:(nonnull NSString *)status
                            amount:(nullable NSDecimalNumber *)amount
                       feeInAmount:(BOOL)feeInAmount
                     estimatedFees:(nullable NSDecimalNumber *)estimatedFees
                              fees:(nullable NSDecimalNumber *)fees
                     fromAddresses:(nullable NSArray<NSString *> *)fromAddresses
                     fromAccountId:(nullable NSString *)fromAccountId
                         toAddress:(nullable NSString *)toAddress
                       toAccountId:(nullable NSString *)toAccountId
                         createdAt:(int32_t)createdAt
                         updatedAt:(int32_t)updatedAt
{
    if (self = [super init]) {
        _id = [id copy];
        _type = [type copy];
        _status = [status copy];
        _amount = amount;
        _feeInAmount = feeInAmount;
        _estimatedFees = estimatedFees;
        _fees = fees;
        _fromAddresses = [fromAddresses copy];
        _fromAccountId = [fromAccountId copy];
        _toAddress = [toAddress copy];
        _toAccountId = [toAccountId copy];
        _createdAt = createdAt;
        _updatedAt = updatedAt;
    }
    return self;
}

+ (nonnull instancetype)custodyOrderWithId:(nonnull NSString *)id
                                      type:(nonnull NSString *)type
                                    status:(nonnull NSString *)status
                                    amount:(nullable NSDecimalNumber *)amount
                               feeInAmount:(BOOL)feeInAmount
                             estimatedFees:(nullable NSDecimalNumber *)estimatedFees
                                      fees:(nullable NSDecimalNumber *)fees
                             fromAddresses:(nullable NSArray<NSString *> *)fromAddresses
                             fromAccountId:(nullable NSString *)fromAccountId
                                 toAddress:(nullable NSString *)toAddress
                               toAccountId:(nullable NSString *)toAccountId
                                 createdAt:(int32_t)createdAt
                                 updatedAt:(int32_t)updatedAt
{
    return [(ZKCustodyOrder*)[self alloc] initWithId:id
                                                type:type
                                              status:status
                                              amount:amount
                                         feeInAmount:feeInAmount
                                       estimatedFees:estimatedFees
                                                fees:fees
                                       fromAddresses:fromAddresses
                                       fromAccountId:fromAccountId
                                           toAddress:toAddress
                                         toAccountId:toAccountId
                                           createdAt:createdAt
                                           updatedAt:updatedAt];
}

- (BOOL)isEqual:(id)other
{
    if (![other isKindOfClass:[ZKCustodyOrder class]]) {
        return NO;
    }
    ZKCustodyOrder *typedOther = (ZKCustodyOrder *)other;
    return [self.id isEqualToString:typedOther.id] &&
            [self.type isEqualToString:typedOther.type] &&
            [self.status isEqualToString:typedOther.status] &&
            ((self.amount == nil && typedOther.amount == nil) || (self.amount != nil && [self.amount isEqual:typedOther.amount])) &&
            self.feeInAmount == typedOther.feeInAmount &&
            ((self.estimatedFees == nil && typedOther.estimatedFees == nil) || (self.estimatedFees != nil && [self.estimatedFees isEqual:typedOther.estimatedFees])) &&
            ((self.fees == nil && typedOther.fees == nil) || (self.fees != nil && [self.fees isEqual:typedOther.fees])) &&
            ((self.fromAddresses == nil && typedOther.fromAddresses == nil) || (self.fromAddresses != nil && [self.fromAddresses isEqual:typedOther.fromAddresses])) &&
            ((self.fromAccountId == nil && typedOther.fromAccountId == nil) || (self.fromAccountId != nil && [self.fromAccountId isEqual:typedOther.fromAccountId])) &&
            ((self.toAddress == nil && typedOther.toAddress == nil) || (self.toAddress != nil && [self.toAddress isEqual:typedOther.toAddress])) &&
            ((self.toAccountId == nil && typedOther.toAccountId == nil) || (self.toAccountId != nil && [self.toAccountId isEqual:typedOther.toAccountId])) &&
            self.createdAt == typedOther.createdAt &&
            self.updatedAt == typedOther.updatedAt;
}

- (NSUInteger)hash
{
    return NSStringFromClass([self class]).hash ^
            self.id.hash ^
            self.type.hash ^
            self.status.hash ^
            self.amount.hash ^
            (NSUInteger)self.feeInAmount ^
            self.estimatedFees.hash ^
            self.fees.hash ^
            self.fromAddresses.hash ^
            self.fromAccountId.hash ^
            self.toAddress.hash ^
            self.toAccountId.hash ^
            (NSUInteger)self.createdAt ^
            (NSUInteger)self.updatedAt;
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p id:%@ type:%@ status:%@ amount:%@ feeInAmount:%@ estimatedFees:%@ fees:%@ fromAddresses:%@ fromAccountId:%@ toAddress:%@ toAccountId:%@ createdAt:%@ updatedAt:%@>", self.class, (void *)self, self.id, self.type, self.status, self.amount, @(self.feeInAmount), self.estimatedFees, self.fees, self.fromAddresses, self.fromAccountId, self.toAddress, self.toAccountId, @(self.createdAt), @(self.updatedAt)];
}

@end
