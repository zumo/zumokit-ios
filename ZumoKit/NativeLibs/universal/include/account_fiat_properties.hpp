// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from state.djinni

#pragma once

#include "stdx/optional.hpp"
#include <string>
#include <utility>

namespace zumo {

/**
 * Account's fiat related properties.
 * @see Account
 */
struct AccountFiatProperties final {
    /** Fiat account number or null. */
    std::experimental::optional<std::string> account_number;
    /** Fiat account sort code or null. */
    std::experimental::optional<std::string> sort_code;
    /** Fiat account BIC or null. */
    std::experimental::optional<std::string> bic;
    /** Fiat account IBAN or null. */
    std::experimental::optional<std::string> iban;
    /** Customer name or null. */
    std::experimental::optional<std::string> customer_name;

    friend bool operator==(const AccountFiatProperties& lhs, const AccountFiatProperties& rhs);
    friend bool operator!=(const AccountFiatProperties& lhs, const AccountFiatProperties& rhs);

    AccountFiatProperties(std::experimental::optional<std::string> account_number_,
                          std::experimental::optional<std::string> sort_code_,
                          std::experimental::optional<std::string> bic_,
                          std::experimental::optional<std::string> iban_,
                          std::experimental::optional<std::string> customer_name_)
    : account_number(std::move(account_number_))
    , sort_code(std::move(sort_code_))
    , bic(std::move(bic_))
    , iban(std::move(iban_))
    , customer_name(std::move(customer_name_))
    {}
};

}  // namespace zumo
