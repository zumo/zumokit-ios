// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from state.djinni

#pragma once

#include "zumo/decimal.hpp"
#include <cstdint>
#include <string>
#include <utility>

namespace zumo {

/**
 * Zumo exchange rates used in making exchanges.
 * Can also be used to display amounts in local currency to the user.
 */
struct ExchangeRate final {
    /** Identifier. */
    std::string id;
    /**
     * Currency from which exchange is being made.
     * @see currency_code
     */
    std::string deposit_currency;
    /**
     * Currency from which exchange is being made.
     * @see currency_code
     */
    std::string withdraw_currency;
    /** Value of 1 unit of deposit currency in withdraw currency. */
    ::zumo::Decimal value;
    /** Epoch timestamp representing expiration time of this exchange rate. */
    int64_t valid_to;
    /** Epoch timestamp when the exchange rate was issued. */
    int64_t timestamp;

    friend bool operator==(const ExchangeRate& lhs, const ExchangeRate& rhs);
    friend bool operator!=(const ExchangeRate& lhs, const ExchangeRate& rhs);

    ExchangeRate(std::string id_,
                 std::string deposit_currency_,
                 std::string withdraw_currency_,
                 ::zumo::Decimal value_,
                 int64_t valid_to_,
                 int64_t timestamp_)
    : id(std::move(id_))
    , deposit_currency(std::move(deposit_currency_))
    , withdraw_currency(std::move(withdraw_currency_))
    , value(std::move(value_))
    , valid_to(std::move(valid_to_))
    , timestamp(std::move(timestamp_))
    {}
};

}  // namespace zumo
