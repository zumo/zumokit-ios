// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.djinni

#pragma once

#include "decimal.hpp"
#include <cstdint>
#include <string>
#include <utility>

namespace zumo {

/** Record containing Zumo exchange rate quote used in making exchanges. */
struct Quote final {
    /** Identifier. */
    std::string id;
    /** Expiration in seconds at the time of quote creation, e.g. 60. */
    int32_t ttl;
    /** Timestamp when quote was created, e.g.  "2022-10-13T12:39:59.056Z". */
    std::string created_at;
    /** Timestamp representing expiration time of this quote, e.g. "2022-10-13T12:40:58.871Z". */
    std::string expires_at;
    /**
     * Debit currency.
     * @see CurrencyCode
     */
    std::string debit_currency;
    /**
     * Credit currency.
     * @see CurrencyCode
     */
    std::string credit_currency;
    /** Value of 1 unit of debit currency in credit currency. */
    ::zumo::Decimal price;
    /** Fee rate in points of a percentage, e.g. "0.1" representing 0.1% */
    ::zumo::Decimal fee_rate;
    /** Amount to be debited from debit account. */
    ::zumo::Decimal debit_amount;
    /** Amount that will be paid in fees. */
    ::zumo::Decimal fee_amount;
    /** Amount to be credited to credit account. */
    ::zumo::Decimal credit_amount;

    friend bool operator==(const Quote& lhs, const Quote& rhs);
    friend bool operator!=(const Quote& lhs, const Quote& rhs);

    Quote(std::string id_,
          int32_t ttl_,
          std::string created_at_,
          std::string expires_at_,
          std::string debit_currency_,
          std::string credit_currency_,
          ::zumo::Decimal price_,
          ::zumo::Decimal fee_rate_,
          ::zumo::Decimal debit_amount_,
          ::zumo::Decimal fee_amount_,
          ::zumo::Decimal credit_amount_)
    : id(std::move(id_))
    , ttl(std::move(ttl_))
    , created_at(std::move(created_at_))
    , expires_at(std::move(expires_at_))
    , debit_currency(std::move(debit_currency_))
    , credit_currency(std::move(credit_currency_))
    , price(std::move(price_))
    , fee_rate(std::move(fee_rate_))
    , debit_amount(std::move(debit_amount_))
    , fee_amount(std::move(fee_amount_))
    , credit_amount(std::move(credit_amount_))
    {}
};

}  // namespace zumo
