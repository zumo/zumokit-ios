// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from state.djinni

#pragma once

#include "account.hpp"
#include "exchange_rate.hpp"
#include "exchange_settings.hpp"
#include "stdx/optional.hpp"
#include "zumo/decimal.hpp"
#include <string>
#include <utility>

namespace zumo {

struct ComposedExchange final {
    std::experimental::optional<std::string> signed_transaction;
    Account deposit_account;
    Account withdraw_account;
    ExchangeRate exchange_rate;
    ExchangeSettings exchange_settings;
    std::experimental::optional<std::string> exchange_address;
    ::zumo::Decimal value;
    ::zumo::Decimal return_value;
    ::zumo::Decimal deposit_fee;
    ::zumo::Decimal exchange_fee;
    ::zumo::Decimal withdraw_fee;
    std::experimental::optional<std::string> nonce;

    friend bool operator==(const ComposedExchange& lhs, const ComposedExchange& rhs);
    friend bool operator!=(const ComposedExchange& lhs, const ComposedExchange& rhs);

    ComposedExchange(std::experimental::optional<std::string> signed_transaction_,
                     Account deposit_account_,
                     Account withdraw_account_,
                     ExchangeRate exchange_rate_,
                     ExchangeSettings exchange_settings_,
                     std::experimental::optional<std::string> exchange_address_,
                     ::zumo::Decimal value_,
                     ::zumo::Decimal return_value_,
                     ::zumo::Decimal deposit_fee_,
                     ::zumo::Decimal exchange_fee_,
                     ::zumo::Decimal withdraw_fee_,
                     std::experimental::optional<std::string> nonce_)
    : signed_transaction(std::move(signed_transaction_))
    , deposit_account(std::move(deposit_account_))
    , withdraw_account(std::move(withdraw_account_))
    , exchange_rate(std::move(exchange_rate_))
    , exchange_settings(std::move(exchange_settings_))
    , exchange_address(std::move(exchange_address_))
    , value(std::move(value_))
    , return_value(std::move(return_value_))
    , deposit_fee(std::move(deposit_fee_))
    , exchange_fee(std::move(exchange_fee_))
    , withdraw_fee(std::move(withdraw_fee_))
    , nonce(std::move(nonce_))
    {}
};

}  // namespace zumo
