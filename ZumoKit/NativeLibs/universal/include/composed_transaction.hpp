// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.djinni

#pragma once

#include "account.hpp"
#include "decimal.hpp"
#include <optional>
#include <string>
#include <utility>

namespace zumo {

/**
 * Record containing result of one of the transaction compose methods on Wallet object.
 * @see Wallet
 */
struct ComposedTransaction final {
    /**
     * Transaction type, 'FIAT', 'CRYPTO', 'NOMINATED' or 'CUSTODY-WITHDRAW'.
     * @see TransactionType
     */
    std::string type;
    /** Account the composed transaction belongs to. */
    Account account;
    /** Transaction destination, i.e. destination address for crypto transactions or user id for fiat transactions. */
    std::optional<std::string> destination;
    /** Transaction amount in account currency. */
    std::optional<::zumo::Decimal> amount;
    /** Maximum transaction fee. */
    ::zumo::Decimal fee;
    /** Transaction nonce to prevent double spend. */
    std::string nonce;
    /** Signed transaction for a crypto transaction, null otherwise. */
    std::optional<std::string> signed_transaction;
    /** Custody order id for custody withdraw transaction, null otherwise. */
    std::optional<std::string> custody_order_id;
    /** Optional transaction data if available. */
    std::optional<std::string> data;

    friend bool operator==(const ComposedTransaction& lhs, const ComposedTransaction& rhs);
    friend bool operator!=(const ComposedTransaction& lhs, const ComposedTransaction& rhs);

    ComposedTransaction(std::string type_,
                        Account account_,
                        std::optional<std::string> destination_,
                        std::optional<::zumo::Decimal> amount_,
                        ::zumo::Decimal fee_,
                        std::string nonce_,
                        std::optional<std::string> signed_transaction_,
                        std::optional<std::string> custody_order_id_,
                        std::optional<std::string> data_)
    : type(std::move(type_))
    , account(std::move(account_))
    , destination(std::move(destination_))
    , amount(std::move(amount_))
    , fee(std::move(fee_))
    , nonce(std::move(nonce_))
    , signed_transaction(std::move(signed_transaction_))
    , custody_order_id(std::move(custody_order_id_))
    , data(std::move(data_))
    {}
};

}  // namespace zumo
