// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from state.djinni

#pragma once

#include "account.hpp"
#include "stdx/optional.hpp"
#include "sync_status.hpp"
#include "transaction.hpp"
#include "tx_service_connection.hpp"
#include <string>
#include <utility>
#include <vector>

namespace zumo {

struct State final {
    std::vector<Account> accounts;
    std::vector<Transaction> transactions;
    std::string token;
    std::experimental::optional<std::string> active_user_id;
    std::string exchange_rates;
    TxServiceConnection tx_service_connection;
    std::string eth_gas_price;
    SyncStatus sync_status;

    friend bool operator==(const State& lhs, const State& rhs);
    friend bool operator!=(const State& lhs, const State& rhs);

    State(std::vector<Account> accounts_,
          std::vector<Transaction> transactions_,
          std::string token_,
          std::experimental::optional<std::string> active_user_id_,
          std::string exchange_rates_,
          TxServiceConnection tx_service_connection_,
          std::string eth_gas_price_,
          SyncStatus sync_status_)
    : accounts(std::move(accounts_))
    , transactions(std::move(transactions_))
    , token(std::move(token_))
    , active_user_id(std::move(active_user_id_))
    , exchange_rates(std::move(exchange_rates_))
    , tx_service_connection(std::move(tx_service_connection_))
    , eth_gas_price(std::move(eth_gas_price_))
    , sync_status(std::move(sync_status_))
    {}
};

}  // namespace zumo
