// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.djinni

#pragma once

#include "decimal.hpp"
#include <optional>
#include <string>
#include <utility>

namespace zumo {

/** Record containing internal transaction details. */
struct InternalTransaction final {
    /** Sender user id or null if it is external user. */
    std::optional<std::string> from_user_id;
    /** Sender user integrator id or null if it is external user. */
    std::optional<std::string> from_user_integrator_id;
    /** Sender account id or null if it is external user. */
    std::optional<std::string> from_account_id;
    /** Sender address. */
    std::string from_address;
    /** Recipient user id or null if it is external user. */
    std::optional<std::string> to_user_id;
    /** Recipient user integrator id or null if it is external user. */
    std::optional<std::string> to_user_integrator_id;
    /** Recipient account id or null if it is external user. */
    std::optional<std::string> to_account_id;
    /** Recipient address. */
    std::string to_address;
    /** Transaction amount in transaction currency. */
    ::zumo::Decimal amount;

    friend bool operator==(const InternalTransaction& lhs, const InternalTransaction& rhs);
    friend bool operator!=(const InternalTransaction& lhs, const InternalTransaction& rhs);

    InternalTransaction(std::optional<std::string> from_user_id_,
                        std::optional<std::string> from_user_integrator_id_,
                        std::optional<std::string> from_account_id_,
                        std::string from_address_,
                        std::optional<std::string> to_user_id_,
                        std::optional<std::string> to_user_integrator_id_,
                        std::optional<std::string> to_account_id_,
                        std::string to_address_,
                        ::zumo::Decimal amount_)
    : from_user_id(std::move(from_user_id_))
    , from_user_integrator_id(std::move(from_user_integrator_id_))
    , from_account_id(std::move(from_account_id_))
    , from_address(std::move(from_address_))
    , to_user_id(std::move(to_user_id_))
    , to_user_integrator_id(std::move(to_user_integrator_id_))
    , to_account_id(std::move(to_account_id_))
    , to_address(std::move(to_address_))
    , amount(std::move(amount_))
    {}
};

}  // namespace zumo
