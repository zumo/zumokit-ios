// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from state.djinni

#pragma once

#include "crypto_details.hpp"
#include "stdx/optional.hpp"
#include <cstdint>
#include <string>
#include <utility>

namespace zumo {

struct Transaction final {
    std::string id;
    std::string type;
    std::string currency_code;
    std::experimental::optional<std::string> from_user_id;
    std::experimental::optional<std::string> to_user_id;
    std::experimental::optional<std::string> from_account_id;
    std::experimental::optional<std::string> to_account_id;
    std::string network;
    std::string status;
    std::experimental::optional<std::string> amount;
    std::experimental::optional<std::string> fee;
    std::experimental::optional<std::string> nonce;
    std::experimental::optional<CryptoDetails> crypto_details;
    std::experimental::optional<std::string> fiat_details;
    std::experimental::optional<int64_t> submitted_at;
    std::experimental::optional<int64_t> confirmed_at;
    int64_t timestamp;

    friend bool operator==(const Transaction& lhs, const Transaction& rhs);
    friend bool operator!=(const Transaction& lhs, const Transaction& rhs);

    Transaction(std::string id_,
                std::string type_,
                std::string currency_code_,
                std::experimental::optional<std::string> from_user_id_,
                std::experimental::optional<std::string> to_user_id_,
                std::experimental::optional<std::string> from_account_id_,
                std::experimental::optional<std::string> to_account_id_,
                std::string network_,
                std::string status_,
                std::experimental::optional<std::string> amount_,
                std::experimental::optional<std::string> fee_,
                std::experimental::optional<std::string> nonce_,
                std::experimental::optional<CryptoDetails> crypto_details_,
                std::experimental::optional<std::string> fiat_details_,
                std::experimental::optional<int64_t> submitted_at_,
                std::experimental::optional<int64_t> confirmed_at_,
                int64_t timestamp_)
    : id(std::move(id_))
    , type(std::move(type_))
    , currency_code(std::move(currency_code_))
    , from_user_id(std::move(from_user_id_))
    , to_user_id(std::move(to_user_id_))
    , from_account_id(std::move(from_account_id_))
    , to_account_id(std::move(to_account_id_))
    , network(std::move(network_))
    , status(std::move(status_))
    , amount(std::move(amount_))
    , fee(std::move(fee_))
    , nonce(std::move(nonce_))
    , crypto_details(std::move(crypto_details_))
    , fiat_details(std::move(fiat_details_))
    , submitted_at(std::move(submitted_at_))
    , confirmed_at(std::move(confirmed_at_))
    , timestamp(std::move(timestamp_))
    {}
};

}  // namespace zumo
